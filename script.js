(()=>{"use strict";var t;!function(t){t.DEFAULT="default",t.SUCCESS="success",t.WARNING="warning",t.ERROR="error"}(t||(t={}));class e{constructor(s,n,r=t.DEFAULT,i=0,o=!0){this.heading=s,this.message=n,this.style=r,this.notification=this.createNotification(),this.button_container=this.createButtonContainer(),o&&this.createCloseButton(),e.container.appendChild(this.notification),i>0&&(this.timeout=window.setTimeout(this.closeNotification.bind(this),i))}createNotification(){const t=document.createElement("div");t.classList.add(this.style);const e=document.createElement("h1");e.textContent=this.heading,t.appendChild(e);const s=document.createElement("p");return s.innerHTML=this.message,t.appendChild(s),t}createButtonContainer(){const t=document.createElement("div");return t.classList.add("flex_row"),this.notification.appendChild(t),t}createCloseButton(){const t=document.createElement("div");t.textContent="Close",t.classList.add("button"),t.addEventListener("click",this.closeNotification.bind(this)),this.button_container.appendChild(t)}closeNotification(){this.notification.remove(),this.timeout&&window.clearTimeout(this.timeout)}}e.container=document.getElementById("notifs_container");class s extends e{constructor(t,e,s,n,r){super(e,s,n,void 0,!1),this.resolve=t,this.setupPromptButtons(r)}setupPromptButtons(t){t.forEach((t=>{const e=document.createElement("div");e.textContent=t.label,e.classList.add("button"),e.addEventListener("click",(()=>{t.closes&&this.closeNotification(),t.resolves&&this.resolve(t.retval),t.func&&t.func()})),this.button_container.appendChild(e)}))}static prompt(e,n,r=t.DEFAULT,i){return new Promise((t=>{new s(t,e,n,r,i)}))}}class n{constructor(){this.settings={researches:[],recipes:[],inputs:[],outputs:[]};const e=this.getRawSettings();if(!e)return;let r=null;try{r=this.parseAndValidate(e)}catch(r){let i="Error",o="Unknown error",a="Unknown error";r instanceof SyntaxError?(i="Error: JSON Syntax",o="\n\t\t\t\t\tThe JSON strings are malformed and could not be parsed.<br>\n\t\t\t\t\tWould you like to clear your search parameters?<br><br>\n\n\t\t\t\t\tThis action is irreversible and will result in your selected researches, recipes and current calculation being deleted.\n\t\t\t\t",a=`${r.message}: ${e.researches} | ${e.recipes} | ${e.inputs} | ${e.outputs}`):r instanceof Error&&(o=r.message,a=r.message),s.prompt(i,o,t.ERROR,[{label:"Clear",closes:!0,resolves:!0,retval:!0,func:n.clearSearchParameters},{label:"Abort",closes:!0,resolves:!0,retval:!1},{label:"Copy all details",closes:!1,resolves:!1,func:()=>{navigator.clipboard.writeText(a)}}])}r&&(this.settings=r)}static clearSearchParameters(){const t=new URL(window.location.href);t.search="",history.pushState(null,"",t.toString()),window.location.reload()}parseAndValidate(t){var e,s,n,r;const i={researches:JSON.parse(null!==(e=t.researches)&&void 0!==e?e:"[]"),recipes:JSON.parse(null!==(s=t.recipes)&&void 0!==s?s:"[]"),inputs:JSON.parse(null!==(n=t.inputs)&&void 0!==n?n:"[]"),outputs:JSON.parse(null!==(r=t.outputs)&&void 0!==r?r:"[]")};for(const t of Object.values(i)){if(!Array.isArray(t))throw new Error("One of the parameters isn't an array.");for(const e of t)if("number"!=typeof e)throw new Error("One of the values isn't a number.")}return i}getRawSettings(){if(!window.location.search)return null;const t=new URLSearchParams(window.location.search);return{researches:t.get("researches"),recipes:t.get("recipes"),inputs:t.get("inputs"),outputs:t.get("outputs")}}}class r{constructor(){this.settings=new n}static initialize(){new r}}r.initialize()})();